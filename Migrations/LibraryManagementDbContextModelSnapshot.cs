// <auto-generated />
using System;
using LibraryManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryManagement.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    partial class LibraryManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryManagement.Models.BooksModel", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryManagement.Models.CategoryModel", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Contemporary"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Cooking"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Sci Fi"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.RequestDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int?>("BooksBookID")
                        .HasColumnType("int");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.Property<int?>("RequestsRequestID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BooksBookID");

                    b.HasIndex("RequestsRequestID");

                    b.ToTable("RequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Models.RequestModel", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovalUserId")
                        .HasColumnType("int");

                    b.Property<int?>("RejectUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RequestUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateRequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestID");

                    b.HasIndex("RequestUserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("LibraryManagement.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DoB = new DateTime(1971, 4, 26, 16, 1, 2, 380, DateTimeKind.Local).AddTicks(154),
                            Name = "Tony Stark",
                            Password = "12345",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            DoB = new DateTime(1981, 4, 26, 16, 1, 2, 381, DateTimeKind.Local).AddTicks(9510),
                            Name = "Bruce Banner",
                            Password = "12345",
                            Role = 1,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.BooksModel", b =>
                {
                    b.HasOne("LibraryManagement.Models.CategoryModel", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagement.Models.RequestDetailsModel", b =>
                {
                    b.HasOne("LibraryManagement.Models.BooksModel", "Books")
                        .WithMany("RequestDetails")
                        .HasForeignKey("BooksBookID");

                    b.HasOne("LibraryManagement.Models.RequestModel", "Requests")
                        .WithMany("RequestDetails")
                        .HasForeignKey("RequestsRequestID");

                    b.Navigation("Books");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("LibraryManagement.Models.RequestModel", b =>
                {
                    b.HasOne("LibraryManagement.Models.UserModel", "RequestUser")
                        .WithMany("Requests")
                        .HasForeignKey("RequestUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestUser");
                });

            modelBuilder.Entity("LibraryManagement.Models.BooksModel", b =>
                {
                    b.Navigation("RequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Models.CategoryModel", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagement.Models.RequestModel", b =>
                {
                    b.Navigation("RequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Models.UserModel", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
